<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">

    <!-- 使用注解的包，包括子集 -->
    <context:component-scan base-package="com.rds.platform.web" />

    <!-- Spring 统一日志处理   LogInterceptor拦截器 配置　-->
    <bean id="logLnterceptor" class="com.rds.code.Log.LogInterceptor"/>

    <!-- Spring 统一异常处理  ExceptionAdvisor配置 -->
    <bean id="exceptionHandler" class="com.rds.code.Exception.ExceptionAdvisor"></bean>

    <!-- Bean自动代理处理器 配置-->
    <bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator" >
        <property name="beanNames">
            <list>    <!-- 配置需要进行日志记录的Service和Dao -->
                <value>*Mapper</value>
                <!-- 配置所有Service结尾命名的Bean，即所有Service层的类都要经过exceptionHandler异常处理类 -->
                <value>*Service</value>  <!-- Service层的Bean ID 命名要以Service结尾 -->
            </list>
        </property>
        <property name="interceptorNames">
            <list>
                <value>exceptionHandler</value>
                <!--value>logLnterceptor</value-->
                <!--<value>transactionInterceptor</value>-->
            </list>
        </property>
    </bean>

    <bean id="exceptionResolver" class="com.rds.code.Exception.MySimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="java.lang.SQLException">error/sqlerror</prop>
                <prop key="java.lang.Exception">error/500</prop>
            </props>
        </property>
    </bean>

    <!--mvc:resources mapping="/static/**" location="/resources/" />
    <mvc:default-servlet-handler /-->

    <!-- 通过注解，把URL映射到Controller上，该标签默认注册DefaultAnnotationHandlerMapping和AnnotationMethodHandlerAdapter -->
    <mvc:annotation-driven />
    <!-- 视图解析器 -->
    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp"></property>
    </bean>

    <!-- to generate JSON responses using Jackson (without using <mvc:annotation-driven/>) -->
    <bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes" value="application/json" />
    </bean>
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="jacksonMessageConverter" />
            </list>
        </property>
        <!-- 确保session线程安全 -->
        <property name="synchronizeOnSession" value="true" />
    </bean>

    <!-- Configure the multipart resolver -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- one of the properties available; the maximum file size in bytes -->
        <property name="maxUploadSize" value="10000000000"/>
    </bean>

</beans>  